rm(list=ls())
library(shiny)
setwd("~/Desktop/distribution-viewer")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
?HTML
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
rm(list=ls())
library(shiny)
setwd("C:/Users/bclamber/Desktop/distribution-viewer")
runApp("App-1",display.mode = "showcase")
library(LaplacesDemon)
install.packages('LaplacesDemon')
library(logitnorm)
install.packages('logitnorm')
library(actuar)
install.packages('actuar')
# library(VGAM)
library(reshape)
install.packages('reshape')
library(mvtnorm)
library(ggExtra)
library(grid)
library(gridExtra)
library(grid)
library(DirichletReg)
install.packages('DirichletReg')
install.packages('scatterplot3d')
library(markdown)
runApp("App-1",display.mode = "showcase")
library(shiny)
highlightCode <- function(code) {
HTML(
paste0("<pre><code class='html'>",
code,
"</code></pre>")
)
}
runApp(list(
ui = bootstrapPage(
sliderInput("mu", "Mean", min=-30, max=30, value=0, step=0.2),
uiOutput('chunk')
),
server = function(input, output) {
output$chunk <- renderUI({
highlightCode(paste0("dnorm(0, ", input$mu,", 2)"))
})
}
))
library(shiny)
highlightCode <- function(code) {
HTML(
paste0("<pre><code class='r'>",
code,
"</code></pre>")
)
}
runApp(list(
ui = bootstrapPage(
sliderInput("mu", "Mean", min=-30, max=30, value=0, step=0.2),
uiOutput('chunk')
),
server = function(input, output) {
output$chunk <- renderUI({
highlightCode(paste0("dnorm(0, ", input$mu,", 2)"))
})
}
))
library(shiny)
highlightCode <- function(code) {
HTML(
paste0("<pre><code class='R'>",
code,
"</code></pre>")
)
}
runApp(list(
ui = bootstrapPage(
sliderInput("mu", "Mean", min=-30, max=30, value=0, step=0.2),
uiOutput('chunk')
),
server = function(input, output) {
output$chunk <- renderUI({
highlightCode(paste0("dnorm(0, ", input$mu,", 2)"))
})
}
))
library(shiny)
highlightCode <- function(code) {
HTML(
paste0("<pre><code class='R'>",
code,
"</code></pre>")
)
}
runApp(list(
ui = bootstrapPage(
sliderInput("mu", "Mean", min=-30, max=30, value=0, step=0.2),
uiOutput('chunk')
),
server = function(input, output) {
output$chunk <- renderUI({
highlightCode(paste0("print(c(0, ", input$mu,", 2))"))
})
}
))
sessionInfo()
?runApp
library(shiny)
highlightCode <- function(code) {
HTML(
paste0("<pre><code class='R'>",
code,
"</code></pre>")
)
}
runApp(list(
ui = bootstrapPage(
sliderInput("mu", "Mean", min=-30, max=30, value=0, step=0.2),
uiOutput('chunk')
),
server = function(input, output) {
output$chunk <- renderUI({
highlightCode(paste0("print(c(0, ", input$mu,", 2))"))
})
}
), display.mode = "showcase")
library(shiny)
highlightCode <- function(code) {
HTML(
paste0("<pre><code class='R'>",
code,
"</code></pre>")
)
}
runApp(list(
ui = bootstrapPage(
sliderInput("mu", "Mean", min=-30, max=30, value=0, step=0.2),
uiOutput('chunk')
),
server = function(input, output) {
output$chunk <- renderUI({
tagList(
tags$script(src = "highlight.js"),
highlightCode(paste0("print(c(0, ", input$mu,", 2))"))
)
})
}
), display.mode = "showcase")
library(shiny)
highlightCode <- function(code) {
HTML(
paste0("<pre><code class='R'>",
code,
"</code></pre>")
)
}
runApp(list(
ui = bootstrapPage(
sliderInput("mu", "Mean", min=-30, max=30, value=0, step=0.2),
uiOutput('chunk')
),
server = function(input, output) {
output$chunk <- renderUI({
tagList(
tags$script(src = "prism.js"),
highlightCode(paste0("print(c(0, ", input$mu,", 2))"))
)
})
}
), display.mode = "showcase")
library(shiny)
highlightCode <- function(code) {
HTML(
paste0("<pre><code class='R'>",
code,
"</code></pre>")
)
}
runApp(list(
ui = bootstrapPage(
sliderInput("mu", "Mean", min=-30, max=30, value=0, step=0.2),
uiOutput('chunk')
),
server = function(input, output) {
output$chunk <- renderUI({
tagList(
tags$script(src = "highlight.js"),
highlightCode(paste0("return(c(0, ", input$mu,", 2))"))
)
})
}
), display.mode = "showcase")
library(shiny)
highlightCode <- function(code) {
HTML(
paste0("<pre><code class='r'>",
code,
"</code></pre>")
)
}
runApp(list(
ui = bootstrapPage(
sliderInput("mu", "Mean", min=-30, max=30, value=0, step=0.2),
uiOutput('chunk')
),
server = function(input, output) {
output$chunk <- renderUI({
tagList(
tags$script(src = "highlight.js"),
highlightCode(paste0("return(c(0, ", input$mu,", 2))"))
)
})
}
), display.mode = "showcase")
library(shiny)
highlightCode <- function(code) {
HTML(
paste0("<pre><code class='r'>",
code,
"</code></pre>")
)
}
runApp(list(
ui = bootstrapPage(
sliderInput("mu", "Mean", min=-30, max=30, value=0, step=0.2),
uiOutput('chunk')
),
server = function(input, output) {
output$chunk <- renderUI({
tagList(
tags$script(src = "highlight.js"),
highlightCode(paste0("switch(c(0, ", input$mu,", 2))"))
)
})
}
), display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
shinyApp(ui = fluidPage(
withMathJax(includeMarkdown('mathjax-test.Rmd'))),
server = function(input, output) { })
## mathjax test
Document used as is in .Rmd format.
Here's an inline equation with dollar signs: $a + b = c$
Here's an inline equation with slashes/parentheses: \(a + b = c\)
Display format wth double dollar signs:
$$a + b = c$$
Display format with slashes/square brackets:
\[
a + b = c
\]
sessionInfo()
runApp("App-1",launch.browser = T)
runApp("App-1",launch.browser = T)
runApp("App-1",launch.browser = T)
runApp("App-1",launch.browser = T)
runApp("App-1",launch.browser = T)
runApp("App-1",launch.browser = T)
runApp("App-1",launch.browser = T)
runApp("App-1",launch.browser = T)
runApp("App-1",launch.browser = T)
runApp("App-1",launch.browser = T)
runApp("App-1",launch.browser = T)
runApp("App-1",launch.browser = T)
runApp("App-1",launch.browser = T)
runApp("App-1",launch.browser = T)
runApp("App-1",launch.browser = T)
runApp("App-1",launch.browser = T)
?dcat
runApp("App-1",launch.browser = T)
