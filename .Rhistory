library(shiny)
runApp()
runApp()
runApp()
rm(list=ls())
library(shiny)
setwd("C:/Users/bclamber/Desktop/distribution-viewer")
runApp("App-1",display.mode = "showcase")
runApp("App-1",launch.browser = T)
runApp("App-1",launch.browser = T, display.mode = T)
runApp("App-1",launch.browser = T)
?runApp
runApp("App-1",display.mode = T)
runApp("App-1",display.mode = T)
runApp("App-1",launch.browser = T, display.mode = "showcase")
runApp("App-1",display.mode = "showcase")
library(markdown)
runApp("App-1",display.mode = "showcase")
library(shiny)
runApp("App-1",display.mode = "showcase")
withMathJax()
runApp("App-1")
library(gridExtra)
runApp("App-1")
rm(list=ls())
library(shiny)
setwd("C:/Users/bclamber/Desktop/distribution-viewer")
runApp("App-1")
runApp("App-1")
runApp("App-1")
library(VGAM)
rm(list=ls())
library(shiny)
setwd("C:/Users/bclamber/Desktop/distribution-viewer")
setwd("~/Desktop/distribution-viewer")
runApp("App-1", launch.browser = T)
runApp("App-1", launch.browser = T)
library(devtools)
install_github("statistikat/codeModules")
library(codeModules)
library(DF)
library(DT)
library(devtools)
install_github("statistikat/codeModules")
install.packages('DT', dependencies = T)
library(devtools)
library(devtools)
install_github("statistikat/codeModules")
library(codeModules)
ibrary(shiny)
runApp(list(
ui = bootstrapPage(
sliderInput("mu", "Mean", min=-30, max=30, value=0, step=0.2),
uiOutput('chunk')
),
server = function(input, output) {
output$chunk <- renderUI({
HTML(markdown::markdownToHTML(text=paste0("```{python}",
"\n numpy.random.normal(input$mu, 2)"),
options=c("highlight_code"))) })
}
))
runApp(list(
ui = bootstrapPage(
sliderInput("mu", "Mean", min=-30, max=30, value=0, step=0.2),
uiOutput('chunk')
),
server = function(input, output) {
output$chunk <- renderUI({
HTML(markdown::markdownToHTML(text=paste0("```{python}",
"\n numpy.random.normal(", input$mu, "2)"),
options=c("highlight_code"))) })
}
))
runApp(list(
ui = bootstrapPage(
sliderInput("mu", "Mean", min=-30, max=30, value=0, step=0.2),
uiOutput('chunk')
),
server = function(input, output) {
output$chunk <- renderUI({
HTML(markdown::markdownToHTML(text=paste0("```{python}",
"\n numpy.random.normal(", input$mu, ", 2)"),
options=c("highlight_code"))) })
}
))
